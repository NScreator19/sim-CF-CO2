# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vgiM2z4w-3xsl_Bcq5VjLDkw3zRBr_CI
"""

import streamlit as st
import pandas as pd
import numpy as np

st.set_page_config(page_title="Simulasi Clinker Factor dan Emisi CO₂", layout="wide")

# --- Load Data ---
@st.cache_data

def load_data():
    df = pd.read_excel("Clinker_Factor_2025.xlsx", sheet_name="MTD")
    return df

df_raw = load_data()
df_raw.columns = df_raw.columns.str.strip()  # Pastikan tidak ada spasi tersembunyi

# --- Sidebar: Pilihan Simulasi ---
st.sidebar.title("Opsi Simulasi")
bulan = st.sidebar.selectbox("Pilih Bulan:", df_raw["Month"].dropna().unique())
periode = st.sidebar.selectbox("Pilih Periode:", ["MTD", "YTD"])
tipe_data = st.sidebar.selectbox("Pilih Jenis Data:", df_raw["Tipe Data"].dropna().unique())
tipe_simulasi = st.sidebar.radio("Simulasi berdasarkan:", ["CF Konsolidasi", "CF per Tipe Semen"])

# --- Filter Data ---
try:
    df_filtered = df_raw[(df_raw["Month"] == bulan) &
                         (df_raw["Periode"] == periode) &
                         (df_raw["Tipe Data"] == tipe_data)].copy()
except KeyError as e:
    st.error(f"Kolom tidak ditemukan: {e}")
    st.stop()

# --- Simulasi CF ---
st.title("Simulasi Clinker Factor Konsolidasi dan Per Tipe Semen + Emisi CO₂")

st.subheader("🎯 Target Clinker Factor Konsolidasi")
target_cf = st.number_input("Masukkan target Clinker Factor Konsolidasi (%)", min_value=0.0, max_value=100.0, step=0.1)

semen_dipilih = st.multiselect("Pilih tipe semen yang akan disesuaikan Clinker Consumption-nya:",
                                df_filtered["Cement Type"].unique())

if tipe_simulasi == "CF Konsolidasi":
    if len(semen_dipilih) < 2:
        st.warning("Pilih minimal 2 tipe semen untuk simulasi CF Konsolidasi.")
    else:
        df_new = df_filtered.copy()

        # Semen yang tidak dipilih
        df_tetap = df_new[~df_new["Cement Type"].isin(semen_dipilih)]
        clinker_tetap = df_tetap["Clinker Consumption"].sum()

        # Semen yang dipilih
        df_ubah = df_new[df_new["Cement Type"].isin(semen_dipilih)].copy()
        total_prod_ubah = df_ubah["Cement Production"].sum()

        # Hitung clinker total sesuai target CF
        total_cement = df_new["Cement Production"].sum()
        clinker_total_target = (target_cf / 100) * total_cement
        clinker_ubah_total = clinker_total_target - clinker_tetap

        # Update clinker semen yang dipilih secara proporsional
        for idx in df_ubah.index:
            prod = df_ubah.at[idx, "Cement Production"]
            clinker_baru = clinker_ubah_total * (prod / total_prod_ubah)
            df_new.at[idx, "Clinker Consumption"] = clinker_baru
            df_new.at[idx, "Clinker Factor"] = clinker_baru / prod * 100

        # --- Emisi CO₂ ---
        st.subheader("🌿 Simulasi Emisi CO₂ Berdasarkan Clinker Factor Baru")
        calcination_factor = st.number_input("Calcination factor (kg CO₂/ton Clink)", value=532.0)
        stec = st.number_input("STEC (Mj/ton Clink)", value=3340.0)
        tsr = st.number_input("TSR (%)", value=13.0, min_value=0.0, max_value=100.0)
        fuel_ef = st.number_input("Fuel Emission Factor (kg CO₂/Mj)", value=0.0958)

        cf_baru_konsolidasi = df_new["Clinker Consumption"].sum() / df_new["Cement Production"].sum() * 100
        co2_process = (cf_baru_konsolidasi / 100) * calcination_factor
        co2_fuel = stec * fuel_ef * (1 - tsr / 100)
        co2_total = co2_process + co2_fuel

        st.success(f"Clinker Factor Konsolidasi Setelah Simulasi: {cf_baru_konsolidasi:.2f}%")
        st.info(f"CO₂ Specific Net: {co2_total:.2f} kg CO₂/ton cement Eq")

        st.subheader("📄 Kondisi Setelah Simulasi")
        st.dataframe(df_new[["Cement Type", "Clinker Consumption", "Cement Production", "Clinker Factor"]])

elif tipe_simulasi == "CF per Tipe Semen":
    st.subheader("🔍 Tabel Clinker Factor per Tipe Semen")
    st.dataframe(df_filtered[["Cement Type", "Clinker Consumption", "Cement Production", "Clinker Factor"]])